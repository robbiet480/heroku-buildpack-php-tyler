#!/bin/bash
# Usage: bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

# START CONFIG
NGINX_VERSION=1.2.0
LIBMCRYPT_VERSION=2.5.8
LIBMEMCACHED_VERSION=1.0.7
PHP_VERSION=5.4.1
NEWRELIC_VERSION=2.8.5.73
S3_BUCKET=heroku-buildpack-php-tyler
# END CONFIG

#
NGINX_URL="https://s3.amazonaws.com/${S3_BUCKET}/nginx-${NGINX_VERSION}-heroku.tar.gz"
MCRYPT_URL="https://s3.amazonaws.com/${S3_BUCKET}/libmcrypt-${LIBMCRYPT_VERSION}.tar.gz"
MEMCACHED_URL="https://s3.amazonaws.com/${S3_BUCKET}/libmemcached-${LIBMEMCACHED_VERSION}.tar.gz"
PHP_URL="https://s3.amazonaws.com/${S3_BUCKET}/php-${PHP_VERSION}-with-fpm-heroku.tar.gz"
NEWRELIC_URL="https://s3.amazonaws.com/${S3_BUCKET}/newrelic-${NEWRELIC_VERSION}-heroku.tar.gz"
MONGO_URL="http://direct.robbiet.us/mongo.so"
#

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# include .files when moving things around
shopt -s dotglob

mkdir -p $BUILD_DIR $CACHE_DIR

# Nginx
echo "-----> Installing Nginx"
cd ${BUILD_DIR}
if [ ! -d ./vendor/nginx ]; then
  echo "-----> Bundling Nginx v${NGINX_VERSION}"
  mkdir -p ./vendor/nginx
  curl --silent --max-time 60 --location $NGINX_URL | tar xz -C ./vendor/nginx
fi

# libmcrypt
echo "-----> Installing libmcrypt"
cd ${BUILD_DIR}
echo "-----> Bundling libmcrypt v${LIBMCRYPT_VERSION}"
mkdir -p ./local
curl --silent --max-time 60 --location $MCRYPT_URL | tar xz -C ./local

# libmemcached
echo "-----> Installing libmemcached"
cd ${BUILD_DIR}
echo "-----> Bundling libmemcached v${LIBMEMCACHED_VERSION}"
mkdir -p ./local
curl --silent --max-time 60 --location ${MEMCACHED_URL} | tar xz -C ./local


# PHP
echo "-----> Installing PHP"
cd ${BUILD_DIR}
if [ ! -d ./vendor/php ]; then
  echo "-----> Bundling PHP v${PHP_VERSION}"
  mkdir -p ./vendor/php
  curl --silent --max-time 60 --location $PHP_URL | tar xz -C ./vendor/php
  curl --silent --max-time 60 -o ./vendor/php/lib/php/extensions/no-debug-non-zts-20100525/mongo.so --location $MONGO_URL 
fi

echo "-----> Installing newrelic"
cd ${BUILD_DIR}
echo "-----> Bundling newrelic daemon v${NEWRELIC_VERSION}"
mkdir -p ./local
curl --silent --max-time 60 --location $NEWRELIC_URL | tar xz -C ./local
echo "-----> Installing newrelic license"
curl -L "https://raw.github.com/gist/2931402/2a7d63110fa2b59167850a982d203f8f7ee621bf/newrelic-license.sh" -o /app/local/bin/newrelic-license

# Config files
echo "-----> Copying config files"
cp $LP_DIR/conf/php-fpm.conf ${BUILD_DIR}/vendor/php/etc/php-fpm.conf
cp ${BUILD_DIR}/vendor/php/php/fpm/status.html ${BUILD_DIR}/status.html
cp $LP_DIR/conf/php.ini ${BUILD_DIR}/vendor/php/php.ini
cp -a $LP_DIR/conf/etc.d ${BUILD_DIR}/vendor/php/
cp $LP_DIR/conf/nginx.conf.erb ${BUILD_DIR}/vendor/nginx/conf/nginx.conf.erb
#erb $LP_DIR/conf/nginx.conf.erb > ${BUILD_DIR}/vendor/nginx/conf/nginx.conf

# setup web script. php-cgi relies on PHP_FCGI_CHILDREN=5 PHP_FCGI_MAX_REQUESTS=1000, set in 'bin/release'
echo "-----> Installing boot script"
cd $BUILD_DIR
cat >>boot.sh <<EOF
#!/usr/bin/env bash

echo "Booting nginx"

# Override config files if provided in app.
if [ -d /app/conf ]; then

	if [ -d /app/conf/etc.d ]; then
		cp -f /app/conf/etc.d/* /app/vendor/php/etc.d/
	fi

	if [ -r /app/conf/php-fpm.conf ]; then
		cp -f /app/conf/php-fpm.conf /app/vendor/php/etc/php-fpm.conf
	fi

	if [ -r /app/conf/php.ini ]; then
		cp -f /app/conf/php.ini /app/vendor/php/php.ini
	fi

	if [ -r /app/conf/nginx.conf.erb ]; then
		cp -f /app/conf/nginx.conf.erb /app/vendor/nginx/conf/nginx.conf.erb
	fi

fi

# Set correct port variable.
erb /app/vendor/nginx/conf/nginx.conf.erb > /app/vendor/nginx/conf/nginx.conf
# Set NEWRELIC key
if [ -x "/app/local/bin/newrelic-license" ]; then
	/app/local/bin/newrelic-license
fi

touch /app/vendor/nginx/logs/access.log /app/vendor/nginx/logs/error.log /app/vendor/php/var/log/php-fpm.log /app/local/var/log/newrelic/newrelic-daemon.log /app/local/var/log/newrelic/php_agent.log
mkdir -p client_body_temp fastcgi_temp proxy_temp scgi_temp uwsgi_temp
(tail -f -n 0 /app/vendor/nginx/logs/*.log /app/vendor/php/var/log/*.log /app/local/var/log/newrelic/*.log &)

# Fix permissions
chmod -R 777 /app/sdk/cache

newrelic-daemon -c /app/local/etc/newrelic.cfg -d error
php-fpm
nginx
EOF
chmod +x boot.sh

echo "-----> Done with compile"
